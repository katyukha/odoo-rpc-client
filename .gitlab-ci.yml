stages:
    - lint
    - tests
    - coverage
    - pages

flake8:
    image: python:3.6
    stage: lint
    variables:
        PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache"
    cache:
        key: "$CI_JOB_NAME"
        paths:
            - .cache
    before_script:
        - pip install flake8
    script:
        - flake8 --count --statistics odoo_rpc_client

.tests-default: &test-default-definition
    services:
        - name: registry.gitlab.com/katyukha/odoo-ci:10.0
          alias: odoo10
        - name: registry.crnd.pro/crnd-opensource/docker/odoo-ci-x:11.0-ci
          alias: odoo11
        - name: registry.crnd.pro/crnd-opensource/docker/odoo-ci-x:12.0-ci
          alias: odoo12
        - name: registry.crnd.pro/crnd-opensource/docker/odoo-ci-x:13.0-ci
          alias: odoo13
        - name: registry.crnd.pro/crnd-opensource/docker/odoo-ci-x:14.0-ci
          alias: odoo14
        - name: registry.crnd.pro/crnd-opensource/docker/odoo-ci-x:15.0-ci
          alias: odoo15
    variables:
        ODOO_TEST_SUPER_PASSWORD: admin
        
        PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache"
    cache:
        key: "$CI_JOB_NAME"
        paths:
            - .cache
    stage: tests
    before_script:
        - pip install -r requirements.txt -r requirements-test.txt
    script:
        - ODOO_TEST_HOST=odoo10 ODOO_TEST_PROTOCOL="xml-rpc" coverage run -p setup.py test
        - ODOO_TEST_HOST=odoo10 ODOO_TEST_PROTOCOL="json-rpc" coverage run -p setup.py test
        - ODOO_TEST_HOST=odoo11 ODOO_TEST_PROTOCOL="xml-rpc" coverage run -p setup.py test
        - ODOO_TEST_HOST=odoo11 ODOO_TEST_PROTOCOL="json-rpc" coverage run -p setup.py test
        - ODOO_TEST_HOST=odoo12 ODOO_TEST_PROTOCOL="xml-rpc" coverage run -p setup.py test
        - ODOO_TEST_HOST=odoo12 ODOO_TEST_PROTOCOL="json-rpc" coverage run -p setup.py test
        - ODOO_TEST_HOST=odoo13 ODOO_TEST_PROTOCOL="xml-rpc" coverage run -p setup.py test
        - ODOO_TEST_HOST=odoo13 ODOO_TEST_PROTOCOL="json-rpc" coverage run -p setup.py test
        - ODOO_TEST_HOST=odoo14 ODOO_TEST_PROTOCOL="xml-rpc" coverage run -p setup.py test
        - ODOO_TEST_HOST=odoo14 ODOO_TEST_PROTOCOL="json-rpc" coverage run -p setup.py test
        - ODOO_TEST_HOST=odoo15 ODOO_TEST_PROTOCOL="xml-rpc" coverage run -p setup.py test
        - ODOO_TEST_HOST=odoo15 ODOO_TEST_PROTOCOL="json-rpc" coverage run -p setup.py test
        - coverage combine
        - coverage report --fail-under=90
    after_script:
        - mv .coverage .coverage_${CI_JOB_NAME}
    coverage: '/^TOTAL\s+\d+\s+\d+\s+(\d+\%)/'
    artifacts:
        name: "coverage_${CI_JOB_NAME}"
        expire_in: 1 day
        paths:
             - .coverage_${CI_JOB_NAME}

tests-py2.7:
    image: python:2.7
    <<: *test-default-definition

tests-py3.5:
    image: python:3.5
    <<: *test-default-definition

tests-py3.6:
    image: python:3.6
    <<: *test-default-definition

tests-py3.7:
    image: python:3.7
    <<: *test-default-definition

tests-py3.8:
    image: python:3.8
    <<: *test-default-definition

tests-py3.9:
    image: python:3.9
    <<: *test-default-definition

tests-py3.10:
    image: python:3.10
    <<: *test-default-definition

coverage:
    image: python:3.7
    stage: coverage
    dependencies:
        - tests-py2.7
        - tests-py3.5
        - tests-py3.6
        - tests-py3.7
        - tests-py3.8
        - tests-py3.9
        - tests-py3.10
    before_script:
        - pip install coverage
    script:
        - coverage combine .coverage_tests-py2.7 .coverage_tests-py3.5 .coverage_tests-py3.6 .coverage_tests-py3.7 .coverage_tests-py3.8 .coverage_tests-py3.9 .coverage_tests-py3.10
        - coverage report --fail-under=90
    after_script:
        - coverage html
    coverage: '/^TOTAL\s+\d+\s+\d+\s+(\d+\%)/'
    artifacts:
        name: "$CI_JOB_NAME"
        expire_in: 14 day
        paths:
             - htmlcov
